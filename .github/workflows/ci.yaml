on:
  push:
    # Run tests
    branches:
      - main

  # Run tests for any PRs.
  pull_request:

  release:
    types: [published]

permissions:
  pull-requests: write
  contents: write

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build:
    name: Build
    if: github.event_name != 'release'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [14, 16]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Prettier
        run: npx prettier --check .

      - name: Run Unit Tests
        run: npm test
        env:
          CI: true

      - name: Build
        run: npm run build --if-present

  publish:
    name: Publish to GitHub Packages
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.target_commitish }}

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: 'https://npm.pkg.github.com'
          scope: '@polyteknikkojenorkesteri'

      - name: Install Dependencies
        run: npm ci

      - run: git config --global user.name "github-actions[bot]"
      - run: git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update Version
        run: npm --no-git-tag-version version ${{ github.event.release.tag_name }}

      - name: Lint
        run: npm run lint

      - name: Prettier
        run: npx prettier --check .

      - name: Run Unit Tests
        run: npm test
        env:
          CI: true

      - name: Build
        run: npm run build

      - name: Publish
        run: npm publish --tag ${{ github.event.release.target_commitish }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Version
        run: git push
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  dependabot:
    name: Dependabot
    needs: build # If build fails, it won't merge the PR
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request' }} # Detect that the PR author is dependabot
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1

      - name: Enable auto-merge for Dependabot PRs
        if: ${{ steps.dependabot-metadata.outputs.update-type != 'version-update:semver-major' }}
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
